/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package twitter;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class UserDetails extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4267822345593358604L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserDetails\",\"namespace\":\"twitter\",\"fields\":[{\"name\":\"followers_count\",\"type\":\"int\"},{\"name\":\"friends_count\",\"type\":\"int\"},{\"name\":\"listed_count\",\"type\":\"int\"},{\"name\":\"favourites_count\",\"type\":\"int\"},{\"name\":\"statuses_count\",\"type\":\"int\"},{\"name\":\"created_at\",\"type\":[\"null\",\"string\"]},{\"name\":\"utc_offset\",\"type\":[\"null\",\"int\"],\"default\":0},{\"name\":\"time_zone\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"geo_enabled\",\"type\":\"boolean\"},{\"name\":\"lang\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"contributors_enabled\",\"type\":\"boolean\"},{\"name\":\"is_translator\",\"type\":\"boolean\"},{\"name\":\"profile_background_color\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"profile_background_image_url\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"profile_background_image_url_https\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"profile_background_tile\",\"type\":\"boolean\"},{\"name\":\"profile_link_color\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"profile_sidebar_border_color\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"profile_sidebar_fill_color\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"profile_text_color\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"profile_use_background_image\",\"type\":\"boolean\"},{\"name\":\"profile_image_url\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"profile_banner_url\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"default_profile\",\"type\":\"boolean\"},{\"name\":\"default_profile_image\",\"type\":\"boolean\"},{\"name\":\"following\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"follow_request_sent\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"notifications\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int followers_count;
  @Deprecated public int friends_count;
  @Deprecated public int listed_count;
  @Deprecated public int favourites_count;
  @Deprecated public int statuses_count;
  @Deprecated public java.lang.CharSequence created_at;
  @Deprecated public java.lang.Integer utc_offset;
  @Deprecated public java.lang.CharSequence time_zone;
  @Deprecated public boolean geo_enabled;
  @Deprecated public java.lang.CharSequence lang;
  @Deprecated public boolean contributors_enabled;
  @Deprecated public boolean is_translator;
  @Deprecated public java.lang.CharSequence profile_background_color;
  @Deprecated public java.lang.CharSequence profile_background_image_url;
  @Deprecated public java.lang.CharSequence profile_background_image_url_https;
  @Deprecated public boolean profile_background_tile;
  @Deprecated public java.lang.CharSequence profile_link_color;
  @Deprecated public java.lang.CharSequence profile_sidebar_border_color;
  @Deprecated public java.lang.CharSequence profile_sidebar_fill_color;
  @Deprecated public java.lang.CharSequence profile_text_color;
  @Deprecated public boolean profile_use_background_image;
  @Deprecated public java.lang.CharSequence profile_image_url;
  @Deprecated public java.lang.CharSequence profile_banner_url;
  @Deprecated public boolean default_profile;
  @Deprecated public boolean default_profile_image;
  @Deprecated public java.lang.CharSequence following;
  @Deprecated public java.lang.CharSequence follow_request_sent;
  @Deprecated public java.lang.CharSequence notifications;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UserDetails() {}

  /**
   * All-args constructor.
   * @param followers_count The new value for followers_count
   * @param friends_count The new value for friends_count
   * @param listed_count The new value for listed_count
   * @param favourites_count The new value for favourites_count
   * @param statuses_count The new value for statuses_count
   * @param created_at The new value for created_at
   * @param utc_offset The new value for utc_offset
   * @param time_zone The new value for time_zone
   * @param geo_enabled The new value for geo_enabled
   * @param lang The new value for lang
   * @param contributors_enabled The new value for contributors_enabled
   * @param is_translator The new value for is_translator
   * @param profile_background_color The new value for profile_background_color
   * @param profile_background_image_url The new value for profile_background_image_url
   * @param profile_background_image_url_https The new value for profile_background_image_url_https
   * @param profile_background_tile The new value for profile_background_tile
   * @param profile_link_color The new value for profile_link_color
   * @param profile_sidebar_border_color The new value for profile_sidebar_border_color
   * @param profile_sidebar_fill_color The new value for profile_sidebar_fill_color
   * @param profile_text_color The new value for profile_text_color
   * @param profile_use_background_image The new value for profile_use_background_image
   * @param profile_image_url The new value for profile_image_url
   * @param profile_banner_url The new value for profile_banner_url
   * @param default_profile The new value for default_profile
   * @param default_profile_image The new value for default_profile_image
   * @param following The new value for following
   * @param follow_request_sent The new value for follow_request_sent
   * @param notifications The new value for notifications
   */
  public UserDetails(java.lang.Integer followers_count, java.lang.Integer friends_count, java.lang.Integer listed_count, java.lang.Integer favourites_count, java.lang.Integer statuses_count, java.lang.CharSequence created_at, java.lang.Integer utc_offset, java.lang.CharSequence time_zone, java.lang.Boolean geo_enabled, java.lang.CharSequence lang, java.lang.Boolean contributors_enabled, java.lang.Boolean is_translator, java.lang.CharSequence profile_background_color, java.lang.CharSequence profile_background_image_url, java.lang.CharSequence profile_background_image_url_https, java.lang.Boolean profile_background_tile, java.lang.CharSequence profile_link_color, java.lang.CharSequence profile_sidebar_border_color, java.lang.CharSequence profile_sidebar_fill_color, java.lang.CharSequence profile_text_color, java.lang.Boolean profile_use_background_image, java.lang.CharSequence profile_image_url, java.lang.CharSequence profile_banner_url, java.lang.Boolean default_profile, java.lang.Boolean default_profile_image, java.lang.CharSequence following, java.lang.CharSequence follow_request_sent, java.lang.CharSequence notifications) {
    this.followers_count = followers_count;
    this.friends_count = friends_count;
    this.listed_count = listed_count;
    this.favourites_count = favourites_count;
    this.statuses_count = statuses_count;
    this.created_at = created_at;
    this.utc_offset = utc_offset;
    this.time_zone = time_zone;
    this.geo_enabled = geo_enabled;
    this.lang = lang;
    this.contributors_enabled = contributors_enabled;
    this.is_translator = is_translator;
    this.profile_background_color = profile_background_color;
    this.profile_background_image_url = profile_background_image_url;
    this.profile_background_image_url_https = profile_background_image_url_https;
    this.profile_background_tile = profile_background_tile;
    this.profile_link_color = profile_link_color;
    this.profile_sidebar_border_color = profile_sidebar_border_color;
    this.profile_sidebar_fill_color = profile_sidebar_fill_color;
    this.profile_text_color = profile_text_color;
    this.profile_use_background_image = profile_use_background_image;
    this.profile_image_url = profile_image_url;
    this.profile_banner_url = profile_banner_url;
    this.default_profile = default_profile;
    this.default_profile_image = default_profile_image;
    this.following = following;
    this.follow_request_sent = follow_request_sent;
    this.notifications = notifications;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return followers_count;
    case 1: return friends_count;
    case 2: return listed_count;
    case 3: return favourites_count;
    case 4: return statuses_count;
    case 5: return created_at;
    case 6: return utc_offset;
    case 7: return time_zone;
    case 8: return geo_enabled;
    case 9: return lang;
    case 10: return contributors_enabled;
    case 11: return is_translator;
    case 12: return profile_background_color;
    case 13: return profile_background_image_url;
    case 14: return profile_background_image_url_https;
    case 15: return profile_background_tile;
    case 16: return profile_link_color;
    case 17: return profile_sidebar_border_color;
    case 18: return profile_sidebar_fill_color;
    case 19: return profile_text_color;
    case 20: return profile_use_background_image;
    case 21: return profile_image_url;
    case 22: return profile_banner_url;
    case 23: return default_profile;
    case 24: return default_profile_image;
    case 25: return following;
    case 26: return follow_request_sent;
    case 27: return notifications;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: followers_count = (java.lang.Integer)value$; break;
    case 1: friends_count = (java.lang.Integer)value$; break;
    case 2: listed_count = (java.lang.Integer)value$; break;
    case 3: favourites_count = (java.lang.Integer)value$; break;
    case 4: statuses_count = (java.lang.Integer)value$; break;
    case 5: created_at = (java.lang.CharSequence)value$; break;
    case 6: utc_offset = (java.lang.Integer)value$; break;
    case 7: time_zone = (java.lang.CharSequence)value$; break;
    case 8: geo_enabled = (java.lang.Boolean)value$; break;
    case 9: lang = (java.lang.CharSequence)value$; break;
    case 10: contributors_enabled = (java.lang.Boolean)value$; break;
    case 11: is_translator = (java.lang.Boolean)value$; break;
    case 12: profile_background_color = (java.lang.CharSequence)value$; break;
    case 13: profile_background_image_url = (java.lang.CharSequence)value$; break;
    case 14: profile_background_image_url_https = (java.lang.CharSequence)value$; break;
    case 15: profile_background_tile = (java.lang.Boolean)value$; break;
    case 16: profile_link_color = (java.lang.CharSequence)value$; break;
    case 17: profile_sidebar_border_color = (java.lang.CharSequence)value$; break;
    case 18: profile_sidebar_fill_color = (java.lang.CharSequence)value$; break;
    case 19: profile_text_color = (java.lang.CharSequence)value$; break;
    case 20: profile_use_background_image = (java.lang.Boolean)value$; break;
    case 21: profile_image_url = (java.lang.CharSequence)value$; break;
    case 22: profile_banner_url = (java.lang.CharSequence)value$; break;
    case 23: default_profile = (java.lang.Boolean)value$; break;
    case 24: default_profile_image = (java.lang.Boolean)value$; break;
    case 25: following = (java.lang.CharSequence)value$; break;
    case 26: follow_request_sent = (java.lang.CharSequence)value$; break;
    case 27: notifications = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'followers_count' field.
   * @return The value of the 'followers_count' field.
   */
  public java.lang.Integer getFollowersCount() {
    return followers_count;
  }

  /**
   * Sets the value of the 'followers_count' field.
   * @param value the value to set.
   */
  public void setFollowersCount(java.lang.Integer value) {
    this.followers_count = value;
  }

  /**
   * Gets the value of the 'friends_count' field.
   * @return The value of the 'friends_count' field.
   */
  public java.lang.Integer getFriendsCount() {
    return friends_count;
  }

  /**
   * Sets the value of the 'friends_count' field.
   * @param value the value to set.
   */
  public void setFriendsCount(java.lang.Integer value) {
    this.friends_count = value;
  }

  /**
   * Gets the value of the 'listed_count' field.
   * @return The value of the 'listed_count' field.
   */
  public java.lang.Integer getListedCount() {
    return listed_count;
  }

  /**
   * Sets the value of the 'listed_count' field.
   * @param value the value to set.
   */
  public void setListedCount(java.lang.Integer value) {
    this.listed_count = value;
  }

  /**
   * Gets the value of the 'favourites_count' field.
   * @return The value of the 'favourites_count' field.
   */
  public java.lang.Integer getFavouritesCount() {
    return favourites_count;
  }

  /**
   * Sets the value of the 'favourites_count' field.
   * @param value the value to set.
   */
  public void setFavouritesCount(java.lang.Integer value) {
    this.favourites_count = value;
  }

  /**
   * Gets the value of the 'statuses_count' field.
   * @return The value of the 'statuses_count' field.
   */
  public java.lang.Integer getStatusesCount() {
    return statuses_count;
  }

  /**
   * Sets the value of the 'statuses_count' field.
   * @param value the value to set.
   */
  public void setStatusesCount(java.lang.Integer value) {
    this.statuses_count = value;
  }

  /**
   * Gets the value of the 'created_at' field.
   * @return The value of the 'created_at' field.
   */
  public java.lang.CharSequence getCreatedAt() {
    return created_at;
  }

  /**
   * Sets the value of the 'created_at' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.lang.CharSequence value) {
    this.created_at = value;
  }

  /**
   * Gets the value of the 'utc_offset' field.
   * @return The value of the 'utc_offset' field.
   */
  public java.lang.Integer getUtcOffset() {
    return utc_offset;
  }

  /**
   * Sets the value of the 'utc_offset' field.
   * @param value the value to set.
   */
  public void setUtcOffset(java.lang.Integer value) {
    this.utc_offset = value;
  }

  /**
   * Gets the value of the 'time_zone' field.
   * @return The value of the 'time_zone' field.
   */
  public java.lang.CharSequence getTimeZone() {
    return time_zone;
  }

  /**
   * Sets the value of the 'time_zone' field.
   * @param value the value to set.
   */
  public void setTimeZone(java.lang.CharSequence value) {
    this.time_zone = value;
  }

  /**
   * Gets the value of the 'geo_enabled' field.
   * @return The value of the 'geo_enabled' field.
   */
  public java.lang.Boolean getGeoEnabled() {
    return geo_enabled;
  }

  /**
   * Sets the value of the 'geo_enabled' field.
   * @param value the value to set.
   */
  public void setGeoEnabled(java.lang.Boolean value) {
    this.geo_enabled = value;
  }

  /**
   * Gets the value of the 'lang' field.
   * @return The value of the 'lang' field.
   */
  public java.lang.CharSequence getLang() {
    return lang;
  }

  /**
   * Sets the value of the 'lang' field.
   * @param value the value to set.
   */
  public void setLang(java.lang.CharSequence value) {
    this.lang = value;
  }

  /**
   * Gets the value of the 'contributors_enabled' field.
   * @return The value of the 'contributors_enabled' field.
   */
  public java.lang.Boolean getContributorsEnabled() {
    return contributors_enabled;
  }

  /**
   * Sets the value of the 'contributors_enabled' field.
   * @param value the value to set.
   */
  public void setContributorsEnabled(java.lang.Boolean value) {
    this.contributors_enabled = value;
  }

  /**
   * Gets the value of the 'is_translator' field.
   * @return The value of the 'is_translator' field.
   */
  public java.lang.Boolean getIsTranslator() {
    return is_translator;
  }

  /**
   * Sets the value of the 'is_translator' field.
   * @param value the value to set.
   */
  public void setIsTranslator(java.lang.Boolean value) {
    this.is_translator = value;
  }

  /**
   * Gets the value of the 'profile_background_color' field.
   * @return The value of the 'profile_background_color' field.
   */
  public java.lang.CharSequence getProfileBackgroundColor() {
    return profile_background_color;
  }

  /**
   * Sets the value of the 'profile_background_color' field.
   * @param value the value to set.
   */
  public void setProfileBackgroundColor(java.lang.CharSequence value) {
    this.profile_background_color = value;
  }

  /**
   * Gets the value of the 'profile_background_image_url' field.
   * @return The value of the 'profile_background_image_url' field.
   */
  public java.lang.CharSequence getProfileBackgroundImageUrl() {
    return profile_background_image_url;
  }

  /**
   * Sets the value of the 'profile_background_image_url' field.
   * @param value the value to set.
   */
  public void setProfileBackgroundImageUrl(java.lang.CharSequence value) {
    this.profile_background_image_url = value;
  }

  /**
   * Gets the value of the 'profile_background_image_url_https' field.
   * @return The value of the 'profile_background_image_url_https' field.
   */
  public java.lang.CharSequence getProfileBackgroundImageUrlHttps() {
    return profile_background_image_url_https;
  }

  /**
   * Sets the value of the 'profile_background_image_url_https' field.
   * @param value the value to set.
   */
  public void setProfileBackgroundImageUrlHttps(java.lang.CharSequence value) {
    this.profile_background_image_url_https = value;
  }

  /**
   * Gets the value of the 'profile_background_tile' field.
   * @return The value of the 'profile_background_tile' field.
   */
  public java.lang.Boolean getProfileBackgroundTile() {
    return profile_background_tile;
  }

  /**
   * Sets the value of the 'profile_background_tile' field.
   * @param value the value to set.
   */
  public void setProfileBackgroundTile(java.lang.Boolean value) {
    this.profile_background_tile = value;
  }

  /**
   * Gets the value of the 'profile_link_color' field.
   * @return The value of the 'profile_link_color' field.
   */
  public java.lang.CharSequence getProfileLinkColor() {
    return profile_link_color;
  }

  /**
   * Sets the value of the 'profile_link_color' field.
   * @param value the value to set.
   */
  public void setProfileLinkColor(java.lang.CharSequence value) {
    this.profile_link_color = value;
  }

  /**
   * Gets the value of the 'profile_sidebar_border_color' field.
   * @return The value of the 'profile_sidebar_border_color' field.
   */
  public java.lang.CharSequence getProfileSidebarBorderColor() {
    return profile_sidebar_border_color;
  }

  /**
   * Sets the value of the 'profile_sidebar_border_color' field.
   * @param value the value to set.
   */
  public void setProfileSidebarBorderColor(java.lang.CharSequence value) {
    this.profile_sidebar_border_color = value;
  }

  /**
   * Gets the value of the 'profile_sidebar_fill_color' field.
   * @return The value of the 'profile_sidebar_fill_color' field.
   */
  public java.lang.CharSequence getProfileSidebarFillColor() {
    return profile_sidebar_fill_color;
  }

  /**
   * Sets the value of the 'profile_sidebar_fill_color' field.
   * @param value the value to set.
   */
  public void setProfileSidebarFillColor(java.lang.CharSequence value) {
    this.profile_sidebar_fill_color = value;
  }

  /**
   * Gets the value of the 'profile_text_color' field.
   * @return The value of the 'profile_text_color' field.
   */
  public java.lang.CharSequence getProfileTextColor() {
    return profile_text_color;
  }

  /**
   * Sets the value of the 'profile_text_color' field.
   * @param value the value to set.
   */
  public void setProfileTextColor(java.lang.CharSequence value) {
    this.profile_text_color = value;
  }

  /**
   * Gets the value of the 'profile_use_background_image' field.
   * @return The value of the 'profile_use_background_image' field.
   */
  public java.lang.Boolean getProfileUseBackgroundImage() {
    return profile_use_background_image;
  }

  /**
   * Sets the value of the 'profile_use_background_image' field.
   * @param value the value to set.
   */
  public void setProfileUseBackgroundImage(java.lang.Boolean value) {
    this.profile_use_background_image = value;
  }

  /**
   * Gets the value of the 'profile_image_url' field.
   * @return The value of the 'profile_image_url' field.
   */
  public java.lang.CharSequence getProfileImageUrl() {
    return profile_image_url;
  }

  /**
   * Sets the value of the 'profile_image_url' field.
   * @param value the value to set.
   */
  public void setProfileImageUrl(java.lang.CharSequence value) {
    this.profile_image_url = value;
  }

  /**
   * Gets the value of the 'profile_banner_url' field.
   * @return The value of the 'profile_banner_url' field.
   */
  public java.lang.CharSequence getProfileBannerUrl() {
    return profile_banner_url;
  }

  /**
   * Sets the value of the 'profile_banner_url' field.
   * @param value the value to set.
   */
  public void setProfileBannerUrl(java.lang.CharSequence value) {
    this.profile_banner_url = value;
  }

  /**
   * Gets the value of the 'default_profile' field.
   * @return The value of the 'default_profile' field.
   */
  public java.lang.Boolean getDefaultProfile() {
    return default_profile;
  }

  /**
   * Sets the value of the 'default_profile' field.
   * @param value the value to set.
   */
  public void setDefaultProfile(java.lang.Boolean value) {
    this.default_profile = value;
  }

  /**
   * Gets the value of the 'default_profile_image' field.
   * @return The value of the 'default_profile_image' field.
   */
  public java.lang.Boolean getDefaultProfileImage() {
    return default_profile_image;
  }

  /**
   * Sets the value of the 'default_profile_image' field.
   * @param value the value to set.
   */
  public void setDefaultProfileImage(java.lang.Boolean value) {
    this.default_profile_image = value;
  }

  /**
   * Gets the value of the 'following' field.
   * @return The value of the 'following' field.
   */
  public java.lang.CharSequence getFollowing() {
    return following;
  }

  /**
   * Sets the value of the 'following' field.
   * @param value the value to set.
   */
  public void setFollowing(java.lang.CharSequence value) {
    this.following = value;
  }

  /**
   * Gets the value of the 'follow_request_sent' field.
   * @return The value of the 'follow_request_sent' field.
   */
  public java.lang.CharSequence getFollowRequestSent() {
    return follow_request_sent;
  }

  /**
   * Sets the value of the 'follow_request_sent' field.
   * @param value the value to set.
   */
  public void setFollowRequestSent(java.lang.CharSequence value) {
    this.follow_request_sent = value;
  }

  /**
   * Gets the value of the 'notifications' field.
   * @return The value of the 'notifications' field.
   */
  public java.lang.CharSequence getNotifications() {
    return notifications;
  }

  /**
   * Sets the value of the 'notifications' field.
   * @param value the value to set.
   */
  public void setNotifications(java.lang.CharSequence value) {
    this.notifications = value;
  }

  /**
   * Creates a new UserDetails RecordBuilder.
   * @return A new UserDetails RecordBuilder
   */
  public static twitter.UserDetails.Builder newBuilder() {
    return new twitter.UserDetails.Builder();
  }

  /**
   * Creates a new UserDetails RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UserDetails RecordBuilder
   */
  public static twitter.UserDetails.Builder newBuilder(twitter.UserDetails.Builder other) {
    return new twitter.UserDetails.Builder(other);
  }

  /**
   * Creates a new UserDetails RecordBuilder by copying an existing UserDetails instance.
   * @param other The existing instance to copy.
   * @return A new UserDetails RecordBuilder
   */
  public static twitter.UserDetails.Builder newBuilder(twitter.UserDetails other) {
    return new twitter.UserDetails.Builder(other);
  }

  /**
   * RecordBuilder for UserDetails instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserDetails>
    implements org.apache.avro.data.RecordBuilder<UserDetails> {

    private int followers_count;
    private int friends_count;
    private int listed_count;
    private int favourites_count;
    private int statuses_count;
    private java.lang.CharSequence created_at;
    private java.lang.Integer utc_offset;
    private java.lang.CharSequence time_zone;
    private boolean geo_enabled;
    private java.lang.CharSequence lang;
    private boolean contributors_enabled;
    private boolean is_translator;
    private java.lang.CharSequence profile_background_color;
    private java.lang.CharSequence profile_background_image_url;
    private java.lang.CharSequence profile_background_image_url_https;
    private boolean profile_background_tile;
    private java.lang.CharSequence profile_link_color;
    private java.lang.CharSequence profile_sidebar_border_color;
    private java.lang.CharSequence profile_sidebar_fill_color;
    private java.lang.CharSequence profile_text_color;
    private boolean profile_use_background_image;
    private java.lang.CharSequence profile_image_url;
    private java.lang.CharSequence profile_banner_url;
    private boolean default_profile;
    private boolean default_profile_image;
    private java.lang.CharSequence following;
    private java.lang.CharSequence follow_request_sent;
    private java.lang.CharSequence notifications;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(twitter.UserDetails.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.followers_count)) {
        this.followers_count = data().deepCopy(fields()[0].schema(), other.followers_count);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.friends_count)) {
        this.friends_count = data().deepCopy(fields()[1].schema(), other.friends_count);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.listed_count)) {
        this.listed_count = data().deepCopy(fields()[2].schema(), other.listed_count);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.favourites_count)) {
        this.favourites_count = data().deepCopy(fields()[3].schema(), other.favourites_count);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.statuses_count)) {
        this.statuses_count = data().deepCopy(fields()[4].schema(), other.statuses_count);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.created_at)) {
        this.created_at = data().deepCopy(fields()[5].schema(), other.created_at);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.utc_offset)) {
        this.utc_offset = data().deepCopy(fields()[6].schema(), other.utc_offset);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.time_zone)) {
        this.time_zone = data().deepCopy(fields()[7].schema(), other.time_zone);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.geo_enabled)) {
        this.geo_enabled = data().deepCopy(fields()[8].schema(), other.geo_enabled);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.lang)) {
        this.lang = data().deepCopy(fields()[9].schema(), other.lang);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.contributors_enabled)) {
        this.contributors_enabled = data().deepCopy(fields()[10].schema(), other.contributors_enabled);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.is_translator)) {
        this.is_translator = data().deepCopy(fields()[11].schema(), other.is_translator);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.profile_background_color)) {
        this.profile_background_color = data().deepCopy(fields()[12].schema(), other.profile_background_color);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.profile_background_image_url)) {
        this.profile_background_image_url = data().deepCopy(fields()[13].schema(), other.profile_background_image_url);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.profile_background_image_url_https)) {
        this.profile_background_image_url_https = data().deepCopy(fields()[14].schema(), other.profile_background_image_url_https);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.profile_background_tile)) {
        this.profile_background_tile = data().deepCopy(fields()[15].schema(), other.profile_background_tile);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.profile_link_color)) {
        this.profile_link_color = data().deepCopy(fields()[16].schema(), other.profile_link_color);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.profile_sidebar_border_color)) {
        this.profile_sidebar_border_color = data().deepCopy(fields()[17].schema(), other.profile_sidebar_border_color);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.profile_sidebar_fill_color)) {
        this.profile_sidebar_fill_color = data().deepCopy(fields()[18].schema(), other.profile_sidebar_fill_color);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.profile_text_color)) {
        this.profile_text_color = data().deepCopy(fields()[19].schema(), other.profile_text_color);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.profile_use_background_image)) {
        this.profile_use_background_image = data().deepCopy(fields()[20].schema(), other.profile_use_background_image);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.profile_image_url)) {
        this.profile_image_url = data().deepCopy(fields()[21].schema(), other.profile_image_url);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.profile_banner_url)) {
        this.profile_banner_url = data().deepCopy(fields()[22].schema(), other.profile_banner_url);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.default_profile)) {
        this.default_profile = data().deepCopy(fields()[23].schema(), other.default_profile);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.default_profile_image)) {
        this.default_profile_image = data().deepCopy(fields()[24].schema(), other.default_profile_image);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.following)) {
        this.following = data().deepCopy(fields()[25].schema(), other.following);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.follow_request_sent)) {
        this.follow_request_sent = data().deepCopy(fields()[26].schema(), other.follow_request_sent);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.notifications)) {
        this.notifications = data().deepCopy(fields()[27].schema(), other.notifications);
        fieldSetFlags()[27] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing UserDetails instance
     * @param other The existing instance to copy.
     */
    private Builder(twitter.UserDetails other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.followers_count)) {
        this.followers_count = data().deepCopy(fields()[0].schema(), other.followers_count);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.friends_count)) {
        this.friends_count = data().deepCopy(fields()[1].schema(), other.friends_count);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.listed_count)) {
        this.listed_count = data().deepCopy(fields()[2].schema(), other.listed_count);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.favourites_count)) {
        this.favourites_count = data().deepCopy(fields()[3].schema(), other.favourites_count);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.statuses_count)) {
        this.statuses_count = data().deepCopy(fields()[4].schema(), other.statuses_count);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.created_at)) {
        this.created_at = data().deepCopy(fields()[5].schema(), other.created_at);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.utc_offset)) {
        this.utc_offset = data().deepCopy(fields()[6].schema(), other.utc_offset);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.time_zone)) {
        this.time_zone = data().deepCopy(fields()[7].schema(), other.time_zone);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.geo_enabled)) {
        this.geo_enabled = data().deepCopy(fields()[8].schema(), other.geo_enabled);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.lang)) {
        this.lang = data().deepCopy(fields()[9].schema(), other.lang);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.contributors_enabled)) {
        this.contributors_enabled = data().deepCopy(fields()[10].schema(), other.contributors_enabled);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.is_translator)) {
        this.is_translator = data().deepCopy(fields()[11].schema(), other.is_translator);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.profile_background_color)) {
        this.profile_background_color = data().deepCopy(fields()[12].schema(), other.profile_background_color);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.profile_background_image_url)) {
        this.profile_background_image_url = data().deepCopy(fields()[13].schema(), other.profile_background_image_url);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.profile_background_image_url_https)) {
        this.profile_background_image_url_https = data().deepCopy(fields()[14].schema(), other.profile_background_image_url_https);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.profile_background_tile)) {
        this.profile_background_tile = data().deepCopy(fields()[15].schema(), other.profile_background_tile);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.profile_link_color)) {
        this.profile_link_color = data().deepCopy(fields()[16].schema(), other.profile_link_color);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.profile_sidebar_border_color)) {
        this.profile_sidebar_border_color = data().deepCopy(fields()[17].schema(), other.profile_sidebar_border_color);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.profile_sidebar_fill_color)) {
        this.profile_sidebar_fill_color = data().deepCopy(fields()[18].schema(), other.profile_sidebar_fill_color);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.profile_text_color)) {
        this.profile_text_color = data().deepCopy(fields()[19].schema(), other.profile_text_color);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.profile_use_background_image)) {
        this.profile_use_background_image = data().deepCopy(fields()[20].schema(), other.profile_use_background_image);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.profile_image_url)) {
        this.profile_image_url = data().deepCopy(fields()[21].schema(), other.profile_image_url);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.profile_banner_url)) {
        this.profile_banner_url = data().deepCopy(fields()[22].schema(), other.profile_banner_url);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.default_profile)) {
        this.default_profile = data().deepCopy(fields()[23].schema(), other.default_profile);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.default_profile_image)) {
        this.default_profile_image = data().deepCopy(fields()[24].schema(), other.default_profile_image);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.following)) {
        this.following = data().deepCopy(fields()[25].schema(), other.following);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.follow_request_sent)) {
        this.follow_request_sent = data().deepCopy(fields()[26].schema(), other.follow_request_sent);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.notifications)) {
        this.notifications = data().deepCopy(fields()[27].schema(), other.notifications);
        fieldSetFlags()[27] = true;
      }
    }

    /**
      * Gets the value of the 'followers_count' field.
      * @return The value.
      */
    public java.lang.Integer getFollowersCount() {
      return followers_count;
    }

    /**
      * Sets the value of the 'followers_count' field.
      * @param value The value of 'followers_count'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setFollowersCount(int value) {
      validate(fields()[0], value);
      this.followers_count = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'followers_count' field has been set.
      * @return True if the 'followers_count' field has been set, false otherwise.
      */
    public boolean hasFollowersCount() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'followers_count' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearFollowersCount() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'friends_count' field.
      * @return The value.
      */
    public java.lang.Integer getFriendsCount() {
      return friends_count;
    }

    /**
      * Sets the value of the 'friends_count' field.
      * @param value The value of 'friends_count'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setFriendsCount(int value) {
      validate(fields()[1], value);
      this.friends_count = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'friends_count' field has been set.
      * @return True if the 'friends_count' field has been set, false otherwise.
      */
    public boolean hasFriendsCount() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'friends_count' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearFriendsCount() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'listed_count' field.
      * @return The value.
      */
    public java.lang.Integer getListedCount() {
      return listed_count;
    }

    /**
      * Sets the value of the 'listed_count' field.
      * @param value The value of 'listed_count'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setListedCount(int value) {
      validate(fields()[2], value);
      this.listed_count = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'listed_count' field has been set.
      * @return True if the 'listed_count' field has been set, false otherwise.
      */
    public boolean hasListedCount() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'listed_count' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearListedCount() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'favourites_count' field.
      * @return The value.
      */
    public java.lang.Integer getFavouritesCount() {
      return favourites_count;
    }

    /**
      * Sets the value of the 'favourites_count' field.
      * @param value The value of 'favourites_count'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setFavouritesCount(int value) {
      validate(fields()[3], value);
      this.favourites_count = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'favourites_count' field has been set.
      * @return True if the 'favourites_count' field has been set, false otherwise.
      */
    public boolean hasFavouritesCount() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'favourites_count' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearFavouritesCount() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'statuses_count' field.
      * @return The value.
      */
    public java.lang.Integer getStatusesCount() {
      return statuses_count;
    }

    /**
      * Sets the value of the 'statuses_count' field.
      * @param value The value of 'statuses_count'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setStatusesCount(int value) {
      validate(fields()[4], value);
      this.statuses_count = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'statuses_count' field has been set.
      * @return True if the 'statuses_count' field has been set, false otherwise.
      */
    public boolean hasStatusesCount() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'statuses_count' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearStatusesCount() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'created_at' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreatedAt() {
      return created_at;
    }

    /**
      * Sets the value of the 'created_at' field.
      * @param value The value of 'created_at'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setCreatedAt(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.created_at = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'created_at' field has been set.
      * @return True if the 'created_at' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'created_at' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearCreatedAt() {
      created_at = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'utc_offset' field.
      * @return The value.
      */
    public java.lang.Integer getUtcOffset() {
      return utc_offset;
    }

    /**
      * Sets the value of the 'utc_offset' field.
      * @param value The value of 'utc_offset'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setUtcOffset(java.lang.Integer value) {
      validate(fields()[6], value);
      this.utc_offset = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'utc_offset' field has been set.
      * @return True if the 'utc_offset' field has been set, false otherwise.
      */
    public boolean hasUtcOffset() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'utc_offset' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearUtcOffset() {
      utc_offset = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'time_zone' field.
      * @return The value.
      */
    public java.lang.CharSequence getTimeZone() {
      return time_zone;
    }

    /**
      * Sets the value of the 'time_zone' field.
      * @param value The value of 'time_zone'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setTimeZone(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.time_zone = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'time_zone' field has been set.
      * @return True if the 'time_zone' field has been set, false otherwise.
      */
    public boolean hasTimeZone() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'time_zone' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearTimeZone() {
      time_zone = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'geo_enabled' field.
      * @return The value.
      */
    public java.lang.Boolean getGeoEnabled() {
      return geo_enabled;
    }

    /**
      * Sets the value of the 'geo_enabled' field.
      * @param value The value of 'geo_enabled'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setGeoEnabled(boolean value) {
      validate(fields()[8], value);
      this.geo_enabled = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'geo_enabled' field has been set.
      * @return True if the 'geo_enabled' field has been set, false otherwise.
      */
    public boolean hasGeoEnabled() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'geo_enabled' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearGeoEnabled() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'lang' field.
      * @return The value.
      */
    public java.lang.CharSequence getLang() {
      return lang;
    }

    /**
      * Sets the value of the 'lang' field.
      * @param value The value of 'lang'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setLang(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.lang = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'lang' field has been set.
      * @return True if the 'lang' field has been set, false otherwise.
      */
    public boolean hasLang() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'lang' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearLang() {
      lang = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'contributors_enabled' field.
      * @return The value.
      */
    public java.lang.Boolean getContributorsEnabled() {
      return contributors_enabled;
    }

    /**
      * Sets the value of the 'contributors_enabled' field.
      * @param value The value of 'contributors_enabled'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setContributorsEnabled(boolean value) {
      validate(fields()[10], value);
      this.contributors_enabled = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'contributors_enabled' field has been set.
      * @return True if the 'contributors_enabled' field has been set, false otherwise.
      */
    public boolean hasContributorsEnabled() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'contributors_enabled' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearContributorsEnabled() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'is_translator' field.
      * @return The value.
      */
    public java.lang.Boolean getIsTranslator() {
      return is_translator;
    }

    /**
      * Sets the value of the 'is_translator' field.
      * @param value The value of 'is_translator'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setIsTranslator(boolean value) {
      validate(fields()[11], value);
      this.is_translator = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'is_translator' field has been set.
      * @return True if the 'is_translator' field has been set, false otherwise.
      */
    public boolean hasIsTranslator() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'is_translator' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearIsTranslator() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'profile_background_color' field.
      * @return The value.
      */
    public java.lang.CharSequence getProfileBackgroundColor() {
      return profile_background_color;
    }

    /**
      * Sets the value of the 'profile_background_color' field.
      * @param value The value of 'profile_background_color'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setProfileBackgroundColor(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.profile_background_color = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'profile_background_color' field has been set.
      * @return True if the 'profile_background_color' field has been set, false otherwise.
      */
    public boolean hasProfileBackgroundColor() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'profile_background_color' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearProfileBackgroundColor() {
      profile_background_color = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'profile_background_image_url' field.
      * @return The value.
      */
    public java.lang.CharSequence getProfileBackgroundImageUrl() {
      return profile_background_image_url;
    }

    /**
      * Sets the value of the 'profile_background_image_url' field.
      * @param value The value of 'profile_background_image_url'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setProfileBackgroundImageUrl(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.profile_background_image_url = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'profile_background_image_url' field has been set.
      * @return True if the 'profile_background_image_url' field has been set, false otherwise.
      */
    public boolean hasProfileBackgroundImageUrl() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'profile_background_image_url' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearProfileBackgroundImageUrl() {
      profile_background_image_url = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'profile_background_image_url_https' field.
      * @return The value.
      */
    public java.lang.CharSequence getProfileBackgroundImageUrlHttps() {
      return profile_background_image_url_https;
    }

    /**
      * Sets the value of the 'profile_background_image_url_https' field.
      * @param value The value of 'profile_background_image_url_https'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setProfileBackgroundImageUrlHttps(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.profile_background_image_url_https = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'profile_background_image_url_https' field has been set.
      * @return True if the 'profile_background_image_url_https' field has been set, false otherwise.
      */
    public boolean hasProfileBackgroundImageUrlHttps() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'profile_background_image_url_https' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearProfileBackgroundImageUrlHttps() {
      profile_background_image_url_https = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'profile_background_tile' field.
      * @return The value.
      */
    public java.lang.Boolean getProfileBackgroundTile() {
      return profile_background_tile;
    }

    /**
      * Sets the value of the 'profile_background_tile' field.
      * @param value The value of 'profile_background_tile'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setProfileBackgroundTile(boolean value) {
      validate(fields()[15], value);
      this.profile_background_tile = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'profile_background_tile' field has been set.
      * @return True if the 'profile_background_tile' field has been set, false otherwise.
      */
    public boolean hasProfileBackgroundTile() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'profile_background_tile' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearProfileBackgroundTile() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'profile_link_color' field.
      * @return The value.
      */
    public java.lang.CharSequence getProfileLinkColor() {
      return profile_link_color;
    }

    /**
      * Sets the value of the 'profile_link_color' field.
      * @param value The value of 'profile_link_color'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setProfileLinkColor(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.profile_link_color = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'profile_link_color' field has been set.
      * @return True if the 'profile_link_color' field has been set, false otherwise.
      */
    public boolean hasProfileLinkColor() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'profile_link_color' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearProfileLinkColor() {
      profile_link_color = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'profile_sidebar_border_color' field.
      * @return The value.
      */
    public java.lang.CharSequence getProfileSidebarBorderColor() {
      return profile_sidebar_border_color;
    }

    /**
      * Sets the value of the 'profile_sidebar_border_color' field.
      * @param value The value of 'profile_sidebar_border_color'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setProfileSidebarBorderColor(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.profile_sidebar_border_color = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'profile_sidebar_border_color' field has been set.
      * @return True if the 'profile_sidebar_border_color' field has been set, false otherwise.
      */
    public boolean hasProfileSidebarBorderColor() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'profile_sidebar_border_color' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearProfileSidebarBorderColor() {
      profile_sidebar_border_color = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'profile_sidebar_fill_color' field.
      * @return The value.
      */
    public java.lang.CharSequence getProfileSidebarFillColor() {
      return profile_sidebar_fill_color;
    }

    /**
      * Sets the value of the 'profile_sidebar_fill_color' field.
      * @param value The value of 'profile_sidebar_fill_color'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setProfileSidebarFillColor(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.profile_sidebar_fill_color = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'profile_sidebar_fill_color' field has been set.
      * @return True if the 'profile_sidebar_fill_color' field has been set, false otherwise.
      */
    public boolean hasProfileSidebarFillColor() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'profile_sidebar_fill_color' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearProfileSidebarFillColor() {
      profile_sidebar_fill_color = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'profile_text_color' field.
      * @return The value.
      */
    public java.lang.CharSequence getProfileTextColor() {
      return profile_text_color;
    }

    /**
      * Sets the value of the 'profile_text_color' field.
      * @param value The value of 'profile_text_color'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setProfileTextColor(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.profile_text_color = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'profile_text_color' field has been set.
      * @return True if the 'profile_text_color' field has been set, false otherwise.
      */
    public boolean hasProfileTextColor() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'profile_text_color' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearProfileTextColor() {
      profile_text_color = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'profile_use_background_image' field.
      * @return The value.
      */
    public java.lang.Boolean getProfileUseBackgroundImage() {
      return profile_use_background_image;
    }

    /**
      * Sets the value of the 'profile_use_background_image' field.
      * @param value The value of 'profile_use_background_image'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setProfileUseBackgroundImage(boolean value) {
      validate(fields()[20], value);
      this.profile_use_background_image = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'profile_use_background_image' field has been set.
      * @return True if the 'profile_use_background_image' field has been set, false otherwise.
      */
    public boolean hasProfileUseBackgroundImage() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'profile_use_background_image' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearProfileUseBackgroundImage() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'profile_image_url' field.
      * @return The value.
      */
    public java.lang.CharSequence getProfileImageUrl() {
      return profile_image_url;
    }

    /**
      * Sets the value of the 'profile_image_url' field.
      * @param value The value of 'profile_image_url'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setProfileImageUrl(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.profile_image_url = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'profile_image_url' field has been set.
      * @return True if the 'profile_image_url' field has been set, false otherwise.
      */
    public boolean hasProfileImageUrl() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'profile_image_url' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearProfileImageUrl() {
      profile_image_url = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'profile_banner_url' field.
      * @return The value.
      */
    public java.lang.CharSequence getProfileBannerUrl() {
      return profile_banner_url;
    }

    /**
      * Sets the value of the 'profile_banner_url' field.
      * @param value The value of 'profile_banner_url'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setProfileBannerUrl(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.profile_banner_url = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'profile_banner_url' field has been set.
      * @return True if the 'profile_banner_url' field has been set, false otherwise.
      */
    public boolean hasProfileBannerUrl() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'profile_banner_url' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearProfileBannerUrl() {
      profile_banner_url = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'default_profile' field.
      * @return The value.
      */
    public java.lang.Boolean getDefaultProfile() {
      return default_profile;
    }

    /**
      * Sets the value of the 'default_profile' field.
      * @param value The value of 'default_profile'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setDefaultProfile(boolean value) {
      validate(fields()[23], value);
      this.default_profile = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'default_profile' field has been set.
      * @return True if the 'default_profile' field has been set, false otherwise.
      */
    public boolean hasDefaultProfile() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'default_profile' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearDefaultProfile() {
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'default_profile_image' field.
      * @return The value.
      */
    public java.lang.Boolean getDefaultProfileImage() {
      return default_profile_image;
    }

    /**
      * Sets the value of the 'default_profile_image' field.
      * @param value The value of 'default_profile_image'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setDefaultProfileImage(boolean value) {
      validate(fields()[24], value);
      this.default_profile_image = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'default_profile_image' field has been set.
      * @return True if the 'default_profile_image' field has been set, false otherwise.
      */
    public boolean hasDefaultProfileImage() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'default_profile_image' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearDefaultProfileImage() {
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'following' field.
      * @return The value.
      */
    public java.lang.CharSequence getFollowing() {
      return following;
    }

    /**
      * Sets the value of the 'following' field.
      * @param value The value of 'following'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setFollowing(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.following = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'following' field has been set.
      * @return True if the 'following' field has been set, false otherwise.
      */
    public boolean hasFollowing() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'following' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearFollowing() {
      following = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'follow_request_sent' field.
      * @return The value.
      */
    public java.lang.CharSequence getFollowRequestSent() {
      return follow_request_sent;
    }

    /**
      * Sets the value of the 'follow_request_sent' field.
      * @param value The value of 'follow_request_sent'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setFollowRequestSent(java.lang.CharSequence value) {
      validate(fields()[26], value);
      this.follow_request_sent = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'follow_request_sent' field has been set.
      * @return True if the 'follow_request_sent' field has been set, false otherwise.
      */
    public boolean hasFollowRequestSent() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'follow_request_sent' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearFollowRequestSent() {
      follow_request_sent = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'notifications' field.
      * @return The value.
      */
    public java.lang.CharSequence getNotifications() {
      return notifications;
    }

    /**
      * Sets the value of the 'notifications' field.
      * @param value The value of 'notifications'.
      * @return This builder.
      */
    public twitter.UserDetails.Builder setNotifications(java.lang.CharSequence value) {
      validate(fields()[27], value);
      this.notifications = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'notifications' field has been set.
      * @return True if the 'notifications' field has been set, false otherwise.
      */
    public boolean hasNotifications() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'notifications' field.
      * @return This builder.
      */
    public twitter.UserDetails.Builder clearNotifications() {
      notifications = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    @Override
    public UserDetails build() {
      try {
        UserDetails record = new UserDetails();
        record.followers_count = fieldSetFlags()[0] ? this.followers_count : (java.lang.Integer) defaultValue(fields()[0]);
        record.friends_count = fieldSetFlags()[1] ? this.friends_count : (java.lang.Integer) defaultValue(fields()[1]);
        record.listed_count = fieldSetFlags()[2] ? this.listed_count : (java.lang.Integer) defaultValue(fields()[2]);
        record.favourites_count = fieldSetFlags()[3] ? this.favourites_count : (java.lang.Integer) defaultValue(fields()[3]);
        record.statuses_count = fieldSetFlags()[4] ? this.statuses_count : (java.lang.Integer) defaultValue(fields()[4]);
        record.created_at = fieldSetFlags()[5] ? this.created_at : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.utc_offset = fieldSetFlags()[6] ? this.utc_offset : (java.lang.Integer) defaultValue(fields()[6]);
        record.time_zone = fieldSetFlags()[7] ? this.time_zone : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.geo_enabled = fieldSetFlags()[8] ? this.geo_enabled : (java.lang.Boolean) defaultValue(fields()[8]);
        record.lang = fieldSetFlags()[9] ? this.lang : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.contributors_enabled = fieldSetFlags()[10] ? this.contributors_enabled : (java.lang.Boolean) defaultValue(fields()[10]);
        record.is_translator = fieldSetFlags()[11] ? this.is_translator : (java.lang.Boolean) defaultValue(fields()[11]);
        record.profile_background_color = fieldSetFlags()[12] ? this.profile_background_color : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.profile_background_image_url = fieldSetFlags()[13] ? this.profile_background_image_url : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.profile_background_image_url_https = fieldSetFlags()[14] ? this.profile_background_image_url_https : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.profile_background_tile = fieldSetFlags()[15] ? this.profile_background_tile : (java.lang.Boolean) defaultValue(fields()[15]);
        record.profile_link_color = fieldSetFlags()[16] ? this.profile_link_color : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.profile_sidebar_border_color = fieldSetFlags()[17] ? this.profile_sidebar_border_color : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.profile_sidebar_fill_color = fieldSetFlags()[18] ? this.profile_sidebar_fill_color : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.profile_text_color = fieldSetFlags()[19] ? this.profile_text_color : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.profile_use_background_image = fieldSetFlags()[20] ? this.profile_use_background_image : (java.lang.Boolean) defaultValue(fields()[20]);
        record.profile_image_url = fieldSetFlags()[21] ? this.profile_image_url : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.profile_banner_url = fieldSetFlags()[22] ? this.profile_banner_url : (java.lang.CharSequence) defaultValue(fields()[22]);
        record.default_profile = fieldSetFlags()[23] ? this.default_profile : (java.lang.Boolean) defaultValue(fields()[23]);
        record.default_profile_image = fieldSetFlags()[24] ? this.default_profile_image : (java.lang.Boolean) defaultValue(fields()[24]);
        record.following = fieldSetFlags()[25] ? this.following : (java.lang.CharSequence) defaultValue(fields()[25]);
        record.follow_request_sent = fieldSetFlags()[26] ? this.follow_request_sent : (java.lang.CharSequence) defaultValue(fields()[26]);
        record.notifications = fieldSetFlags()[27] ? this.notifications : (java.lang.CharSequence) defaultValue(fields()[27]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
